

/*
 *
 * Arial_Black_14
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : Arial_Black_14.h
 * Date                : 29.07.2015
 * Font size in bytes  : 9762
 * Font width          : 10
 * Font height         : 14
 * Font first char     : 32
 * Font last char      : 128
 * Font used chars     : 96
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef ARIAL_BLACK_14_H
#define ARIAL_BLACK_14_H

#define ARIAL_BLACK_14_WIDTH 10
#define ARIAL_BLACK_14_HEIGHT 14

static const uint8_t Arial_Black_14[] PROGMEM = {
    0x26, 0x22, // size
    0x0A, // width
    0x0E, // height
    0x20, // first char
    0x60, // char count
    
    // char widths
    //32  //33  //34  //35  //36  //37  //38  //39  //40  //41
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3
    0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x07, 0x06, 0x07, 0x07, // 4
    0x09, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x08, 0x00, // 5
    0x08, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, // 6
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 7
    0x00, 0x00, 0x00, 0x00, 0x0B, 0x0E, 0x00, 0x00, 0x00, 0x05, // 8
    0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, // 9
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x07, 0x07, // 10
    0x07, 0x07, 0x05, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // 11
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 						// 12
    
    // font data
    0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, // 46
    0x00, 0xC0, 0x38, 0x06, 0x18, 0x04, 0x00, 0x00, // 47
    0xF8, 0xFC, 0xFE, 0x06, 0xFE, 0xFC, 0xF8, 0x04, 0x0C, 0x1C, 0x18, 0x1C, 0x0C, 0x04, // 48
    0x30, 0x30, 0x18, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, // 49
    0x0C, 0x0E, 0x8E, 0xC6, 0xFE, 0x7C, 0x38, 0x18, 0x1C, 0x1C, 0x1C, 0x18, 0x18, 0x18, // 50
    0x0C, 0x0E, 0x0E, 0x66, 0xFE, 0xFC, 0x98, 0x0C, 0x1C, 0x1C, 0x18, 0x1C, 0x0C, 0x04, // 51
    0xC0, 0xE0, 0xB0, 0x98, 0x8C, 0xFE, 0xFE, 0xFE, 0x80, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1C, 0x1C, 0x1C, 0x04, // 52
    0x30, 0x7E, 0x3E, 0x36, 0xF6, 0xF6, 0xE6, 0x0C, 0x1C, 0x1C, 0x18, 0x1C, 0x0C, 0x04, // 53
    0xF8, 0xFC, 0xFE, 0x46, 0xEE, 0xEE, 0xCC, 0x04, 0x0C, 0x1C, 0x18, 0x1C, 0x1C, 0x0C, // 54
    0x06, 0x06, 0xC6, 0xF6, 0xFE, 0x1E, 0x06, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, // 55
    0x9C, 0xFE, 0xFE, 0x66, 0xFE, 0xFE, 0x9C, 0x0C, 0x1C, 0x1C, 0x18, 0x1C, 0x1C, 0x0C, // 56
    0x3C, 0x7E, 0x7E, 0x26, 0xFE, 0xFC, 0xF8, 0x0C, 0x1C, 0x1C, 0x18, 0x1C, 0x0C, 0x04, // 57
    0x20, 0x70, 0x70, 0xD8, 0xD8, 0x8C, 0x8C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x0C, // 60
    0x06, 0x8C, 0x8C, 0xD8, 0xD8, 0x70, 0x70, 0x20, 0x0C, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, // 62
    0x00, 0xC0, 0xF8, 0xFE, 0xBE, 0x8E, 0xBE, 0xFE, 0xF8, 0xC0, 0x00, 0x18, 0x1C, 0x1C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1C, 0x1C, 0x18, // 65
    0xFE, 0xFE, 0xFE, 0x06, 0x06, 0x0E, 0xFE, 0xFC, 0xF8, 0x1C, 0x1C, 0x1C, 0x18, 0x18, 0x1C, 0x1C, 0x0C, 0x04, // 68
    0xFE, 0xFE, 0xFE, 0x1C, 0x1C, 0x1C, // 73
    0x02, 0x1E, 0xFE, 0xFC, 0xE0, 0x00, 0xE0, 0xFC, 0xFE, 0x1E, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, 0x00, 0x00, // 86
    0x06, 0x7E, 0xFE, 0xF8, 0xC0, 0xF8, 0x7E, 0x1E, 0x7E, 0xF8, 0xC0, 0xF8, 0xFE, 0x7E, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x0C, 0x00, 0x00, 0x00, 0x0C, 0x1C, 0x1C, 0x1C, 0x00, // 87
    0xFE, 0xFE, 0xFE, 0x06, 0x06, 0xFC, 0xFC, 0xFC, 0xC0, 0xC0, // 91
    0x06, 0x06, 0xFE, 0xFE, 0xFE, 0xC0, 0xC0, 0xFC, 0xFC, 0xFC, // 93
    0xE0, 0xF0, 0xF8, 0x98, 0xF8, 0xF0, 0xE0, 0x04, 0x0C, 0x1C, 0x18, 0x18, 0x18, 0x08, // 101
    0xFE, 0xFE, 0xFE, 0x1C, 0x1C, 0x1C, // 108
    0xF8, 0xF8, 0xF8, 0x10, 0xF8, 0xF8, 0xF0, 0x18, 0xF8, 0xF8, 0xF0, 0x1C, 0x1C, 0x1C, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x1C, 0x1C, 0x1C, // 109
    0xF8, 0xF8, 0xF8, 0x10, 0xF8, 0xF8, 0xF0, 0x1C, 0x1C, 0x1C, 0x00, 0x1C, 0x1C, 0x1C, // 110
    0xE0, 0xF0, 0xF8, 0x18, 0xF8, 0xF0, 0xE0, 0x04, 0x0C, 0x1C, 0x18, 0x1C, 0x0C, 0x04, // 111
    0xF8, 0xF8, 0xF8, 0x10, 0xF8, 0xF8, 0xF0, 0xFC, 0xFC, 0xFC, 0x08, 0x1C, 0x1C, 0x0C, // 112
    0xF8, 0xF8, 0xF8, 0x10, 0x18, 0x1C, 0x1C, 0x1C, 0x00, 0x00, // 114
    0x70, 0xF8, 0xF8, 0xC8, 0xC8, 0xD8, 0x90, 0x08, 0x18, 0x10, 0x10, 0x1C, 0x1C, 0x0C, // 115
    0x18, 0xFC, 0xFC, 0xFE, 0x18, 0x18, 0x00, 0x0C, 0x1C, 0x1C, 0x18, 0x18, // 116    
};

#endif
